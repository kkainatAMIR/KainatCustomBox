<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>About us</title>
    <link rel="stylesheet" href="box.css">
    <style>
        /* General Container Styling */
        .comments-container {
            width: 80%;
            margin: auto;
            font-family: 'Arial', sans-serif;
            background-color: #f5f7fa;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Comment Card Styling */
        .comment-card {
            display: flex;
            align-items: flex-start;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 10px;
            background: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease;
        }

        .comment-card:hover {
            transform: translateY(-5px);
        }

        .profile-picture {
            margin-right: 15px;
        }

        .profile-picture img {
            border-radius: 50%;
            width: 60px;
            height: 60px;
            object-fit: cover;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .comment-content {
            flex: 1;
        }

        .comment-header {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .comment-header strong {
            font-size: 1.1em;
            color: #333;
            margin-right: 10px;
        }

        .comment-header span {
            color: #999;
            font-size: 0.9em;
        }

        .comment-content p {
            margin: 0;
            color: #666;
            line-height: 1.6;
        }

        /* Delete Button Styling */
        .delete-button {
            padding: 8px 16px;
            border: none;
            border-radius: 5px;
            background-color: #ff5c5c;
            color: #fff;
            font-size: 0.9em;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .delete-button:hover {
            background-color: #ff3333;
        }

        /* Add Comment Section Styling */
        .add-comment {
            margin-top: 30px;
            padding: 20px;
            border-radius: 10px;
            background: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .add-comment h3 {
            margin-bottom: 20px;
            font-size: 1.2em;
            color: #333;
        }

        .add-comment form {
            display: flex;
            flex-direction: column;
        }

        .add-comment label {
            margin-bottom: 5px;
            color: #333;
        }

        .add-comment input,
        .add-comment textarea {
            margin-bottom: 15px;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 100%;
            box-sizing: border-box;
            font-size: 1em;
        }

        .add-comment button {
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            background-color: #0284c7;
            color: #fff;
            font-size: 1em;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .add-comment button:hover {
            background-color: #027bb5;
        }
        .deleteButton{
            border: 2px thin white ;
            background-color: #177E80;
            color: white;

        }
    </style>
</head>
<body>
    <header>
        <nav> 
            <div class="logo">
                <img src="logo.png" alt="Custom Box Logo">
            </div>
            <ul class="menu">
                <li><a href="index.html">Home</a></li>
                <li><a href="#categories">Categories</a></li>
                <li><a href="./pages/images/custom.html">Custom Box</a></li>
                <li><a href="reveiw.htm">Reviews</a></li>
                <li><a href="./pages/images/contqact.html">Contact</a></li>
                <li><a href="Abt.html">About Us</a></li>
                <li><a href="#">My Account</a></li>
            </ul>
        </nav>
    </header>

    <div class="comments-container">
        <div id="comments-list"></div>
    
        <div class="add-comment">
            <h3>Add a Comment</h3>
            <form id="comment-form">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>

                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>

                <label for="comment">Comment:</label>
                <textarea id="comment" name="comment" required></textarea>
                <button type="submit">Submit</button>
            </form>
        </div>
    </div>
    
    <script>
         document.addEventListener('DOMContentLoaded', function() {
            const commentForm = document.getElementById('comment-form');
            const commentSection = document.getElementById('comment-section');
    
            // Function to add a comment
            function addComment(username, comment) {
                const commentDiv = document.createElement('div');
                commentDiv.classList.add('comment');
    
                const profilePic = document.createElement('img');
                profilePic.src = 'profile5.jpg'; // Change the profile picture source as needed
                profilePic.alt = 'Profile Picture';
                profilePic.classList.add('profile-pic');
    
                const usernameElement = document.createElement('p');
                usernameElement.classList.add('username');
                usernameElement.textContent = username;
    
                const commentText = document.createElement('p');
                commentText.classList.add('comment-text');
                commentText.textContent = comment;
    
                commentDiv.appendChild(profilePic);
                commentDiv.appendChild(usernameElement);
                commentDiv.appendChild(commentText);
    
                commentSection.appendChild(commentDiv);
            }
    
            // Load comments from local storage
            function loadComments() {
                const savedComments = localStorage.getItem('comments');
                if (savedComments) {
                    const comments = JSON.parse(savedComments);
                    comments.forEach(comment => {
                        addComment(comment.username, comment.comment);
                    });
                }
            }
    
            // Save comments to local storage
            function saveComment(username, comment) {
                let comments = localStorage.getItem('comments');
                if (!comments) {
                    comments = [];
                } else {
                    comments = JSON.parse(comments);
                }
                comments.push({ username, comment });
                localStorage.setItem('comments', JSON.stringify(comments));
            }
    
            // Load existing comments when the page loads
            loadComments();
    
            // Submit comment form event listener
            commentForm.addEventListener('submit', function(event) {
                event.preventDefault();
                const username = document.getElementById('username').value;
                const comment = document.getElementById('comment').value;
    
                // Check if username and comment are not empty
                if (username.trim() === '' || comment.trim() === '') {
                    alert('Please fill in all fields.');
                    return;
                }
    
                // Add the comment
                addComment(username, comment);
                saveComment(username, comment);
    
                // Clear the form
                document.getElementById('username').value = '';
                document.getElementById('comment').value = '';
            });
        });

        document.addEventListener('DOMContentLoaded', () => {
    const commentsList = document.getElementById('comments-list');
    const commentForm = document.getElementById('comment-form');

    // Load comments from local storage
    function loadComments() {
        const comments = JSON.parse(localStorage.getItem('comments')) || [];
        commentsList.innerHTML = '';
        comments.forEach(comment => displayComment(comment));
    }

    // Display a single comment
    function displayComment(comment) {
        const commentCard = document.createElement('div');
        commentCard.className = 'comment-card';

        const profilePicture = document.createElement('div');
        profilePicture.className = 'profile-picture';
        const img = document.createElement('img');
        img.src = 'images/profile-placeholder.png';  // Correct path to the placeholder image
        img.alt = 'Profile Picture';
        profilePicture.appendChild(img);

        const commentContent = document.createElement('div');
        commentContent.className = 'comment-content';

        const commentHeader = document.createElement('div');
        commentHeader.className = 'comment-header';
        const strong = document.createElement('strong');
        strong.textContent = comment.username;
        const span = document.createElement('span');
        span.textContent = ` (${comment.email})`;
        commentHeader.appendChild(strong);
        commentHeader.appendChild(span);

        const p = document.createElement('p');
        p.textContent = comment.text;

        const deleteButton = document.createElement('button');
        deleteButton.textContent = 'Delete';
        deleteButton.style.borderRadius = '5px '
        deleteButton.style.background = '#177E80'
        deleteButton.style.color = 'white'
        deleteButton.style.border = '2px'
        deleteButton.style.padding = '5px'
        deleteButton.addEventListener('click', () => deleteComment(comment));

        commentContent.appendChild(commentHeader);
        commentContent.appendChild(p);
        commentContent.appendChild(deleteButton);

        commentCard.appendChild(profilePicture);
        commentCard.appendChild(commentContent);

        commentsList.appendChild(commentCard);
    }

    // Delete a comment
    function deleteComment(comment) {
        if (confirm('Are you sure you want to delete this comment?')) {
            // Retrieve comments from local storage
            let comments = JSON.parse(localStorage.getItem('comments')) || [];
            // Find the index of the comment to delete
            const index = comments.findIndex(c => c.username === comment.username && c.email === comment.email && c.text === comment.text);
            // Remove the comment from the array
            comments.splice(index, 1);
            // Update local storage
            localStorage.setItem('comments', JSON.stringify(comments));
            // Reload comments
            loadComments();
        }
    }

    // Handle form submission
    commentForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const username = document.getElementById('username').value;
        const email = document.getElementById('email').value;
        const commentText = document.getElementById('comment').value;

        const newComment = {
            username: username,
            email: email,
            text: commentText
        };

        // Save to local storage
        const comments = JSON.parse(localStorage.getItem('comments')) || [];
        comments.push(newComment);
        localStorage.setItem('comments', JSON.stringify(comments));

        // Display the new comment
        displayComment(newComment);

        // Clear the form
        commentForm.reset();
    });

    // Initial load of comments
    loadComments();
});



    </script>
</body>
</html>
